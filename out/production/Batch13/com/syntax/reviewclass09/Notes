OOPS is just a wau of writing code a methodology a set of rules that we follow when
we write code.In this methodology we create classes and object of those classes to represent evertinng
from real live
we also have:
1) functional programing
2)Procedural programing

Four Pillars of OOPs;
1)Inheritance
2)Polymorphism
3)Abstraction
4)Encapsulation
     Some benefits of OOPS;
1)code re usability.
2)Cleaner code
3)More flexibility
4)Less code
5)Enforcing rules and hiding the complexity and only focusing on the ideas.
6)Secure code
--Inheritance
This is a mechanism in java through which a class can acquir the properties and methods of
another class

Why should we use inheritance;
 If a piece of code is already present in a class instead of rewriting it or copying it.we
 can extend our class from that class and we will get all the non-privet methods and fields that class
 It can save a lot of time.It's also good for performers reasons
 Disadvantage of Inheritance:
 1)we get the unwanted code as well when we inherit from a class.
 2)Glasses are tightly coupled which means if we change something in the parent class it affects
 all the child classes
 How can we use inheritance;
 we use the extends keyword to inherit the glasses

Rules:
1)Inheritenca is one way from parent to child only.
2) in Java we can't from multiple classes
3)final classes cant be inherited.classes which are declared with final keyword are called
final classes
4)privet member are not inherited;
5)constructor are not inherited but we can call them using super();
6)Child classes must provide a matching constructor
Types of inheritance:
1)Single
2)Multilevel;
3)hierarchical
4)Multiple(NOT supported in Java)


Single Inheritence;
Onle one parent and one child class
Multilevel inheritance;
When we have a parent and a child class and one or may intermediate classse we call
Hierarchical inhertance
when we have a single Parent class and multiple direct child classes it is called

=========================================================================
Super Keyword:
Super is a keyword that we use to refer to the parent class fields methods or constructor.
Why we should use super keyword;
1)if we have same names field inside the parent class or child class we can use the super keyword.
to distinguish these fields.It's not that common
2)we ca n use the super() to call the constructor of the parent class as they are not inherited
3)If we have same name Methods inside the parent and the child class we can use super keyword
to call the method from the parent class
========================================================================
Method Overloading:
whenever same name method exist in a class witch different parameters we call it method;
overloading.
Why should use MethodOverLoading:
it helps us write more cleaner and more readable code and also provides the flexibility to have
same name methods in a class
How to create an overloading method:
create the same method name but make sure this differs in the of parameters or in types of
parameters or in sequence of parameters.
Rules:
1)Method name should be same but parameters should be different;
2)By just changing the return type we can't overload a method
3) we cant overload by just changing the access modifiers(private,protected,default,public)
 and non-access modifiers(final,static,and abstract)
 4)We can also overload constructor in the same manner as we do for methods



























